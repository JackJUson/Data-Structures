Question 4

Which of the given algorithms could have been used to construct the
mininum spanning tree? Justify your answer.


Kruskal's Algorithm = Multiple connected components
Since Kruskal's algorithm adds the smallest weighted edge to the graph regardless
of vertices and regardless of continuation, (regarding that it does not form a cycle) 
one at a time to the graph, Kruskal's algorithm can be used to find the minimum 
spanning tree with the given added edge sequence.

Since the edge A-E and C-D are two seperate connected components, this means that
the algorithm does not add edges in continuation of the vertices with an edge in
the current graph, Kruskal's Algorithm can be used. As edges A-E and C-D can be 
edges that are smallest in weight in ascending order.

//
Out of the given algorithms, only Kruskal's algorithm and Prim's algorithm are
used to construct minimum spanning trees. But during the execution of Prim's 
algorithm, every new edge added to the MST must be connected to the edges that
have been already added. The given sequence of edges does not satisfy this 
condition. Meanwhile, Kruskal's algorithm does not have this property, so it
could have been used to construct the MST.
//

Dijkstra's Algorithm cannot be used to find minimal spanning tree. (Only for
shortest path)

Depth-First Search is continous, in the edges it finds as the edges has to be
the adjacent upcoming possible edge with the smallest vertex.

Prim's Algorithm is also continous in the fact that the edges that are added
remain one single connected component until the spanning tree is found.