Question 1

(a) What is the maximum input size that can be processed? Justify your
    answer.

    1000 * 2^(10) = 1024000
    2^n = 1024000
    n = 19.97
    19 is the maximum input size that can be processed.


(b) Which of the two algorithms is more efficient? Justify your answer.

    We only need two comparisons to reduce the search space from n to n/4 by
    using a binary search. Since we halve the search space from n to n/2 then
    halve again from n/2 to n/4. But quad search would require three comparisons.
    Hence binary search is more efficient.

(c) What are the time complexities of fnA() and fnB() in terms of a and
    b? Justify your answer.

    fnA() time complexity is O(b - a).
    Since it is assumed that a is less or equal to b and the recursion is 
    continously called until a equals b, this means that the function is
    called by the amount of difference of b and a, and since all other
    computational operations is constant, hence O(b - a).

    fnB() time complexity is O((b - a)^2).
    Similar to fnA() the function is recursively called until a is greater
    or equal to b. However since it also calls fnA() within the function and
    of each recursion and also including that all other computational operations 
    are constant, this gives us the time complexity of O((b - a)^2).


